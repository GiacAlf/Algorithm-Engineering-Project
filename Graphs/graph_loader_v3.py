"""
The following code is used to load a graph from a CSV file that can be
generated by the graph_generator.py script or prepared by the user.
"""
import csv
import networkit as nk


class GraphLoader:
    def __init__(self, file_path):
        self.file_path = file_path

    def load_graph_from_csv(self):
        # Initialize an empty graph
        graph = nk.Graph()  # Create an empty graph

        # Read the CSV file and construct the graph
        with open(self.file_path, 'r') as file:
            reader = csv.reader(file)
            next(reader)  # Skip the header

            edges = [(int(row[0]), int(row[1])) for row in reader]  # Collect edges

        # Add edges to the graph
        for u, v in edges:
            max_node = max(u, v)
            # Ensure all nodes exist
            while graph.numberOfNodes() <= max_node:
                graph.addNode()  # Add nodes if they don't exist
            graph.addEdge(u, v)  # Add the edge

        return graph


if __name__ == '__main__':
    file_path = 'generated_graphs/generated_graph.csv'
    loader = GraphLoader(file_path)
    graph = loader.load_graph_from_csv()

    # Print the number of nodes and edges
    print(f"Number of nodes: {graph.numberOfNodes()}")
    print(f"Number of edges: {graph.numberOfEdges()}")
